@using Microsoft.AspNetCore.Identity
@using docmaster.Areas.Identity.Data
@inject SignInManager<docmasterUser> SignInManager
@inject UserManager<docmasterUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Welcome @UserManager.GetUserAsync(User).Result.FirstName</a>
        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
       
            @if (User.IsInRole("Admin"))
            {
                <a class="dropdown-item" href="#" id="manage" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Welcome @UserManager.GetUserAsync(User).Result.FirstName</a>
                <a id="manage2" class="dropdown-item" asp-controller="RoleManager" asp-action="Index" title="User Roles">Manage Roles</a>
                <a id="manage3" class="dropdown-item" asp-controller="UserRoles" asp-action="Index" title="Manage Users">Manage Users</a>
            }
             <form id="logoutForm" class="form-inline " asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="dropdown-item">Logout</button>
            </form>
        </div>
    </li>

}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>


