@page
@model docmaster.Areas.Identity.Pages.Account.Manage.ManagerModel
@using Microsoft.AspNetCore.Identity
@using docmaster.Areas.Identity.Data
@inject SignInManager<docmasterUser> SignInManager
@inject UserManager<docmasterUser> UserManager
@{
    string[] files = new string[] { "Open", "|", "Details", "|", "Rename", "|", "Cut",  "|", "Edit",  "|",  "Copy", "|", "Paste", "|", "Delete", "|", "Encrypt", "|", "Decrypt", "|", "Preview" };
    string[] folder = new string[] { "Open", "|", "Details" , "|", "Rename","|", "Cut", "|", "Copy", "|", "Paste", "|", "Delete", "|", "Encrypt", "|", "Decrypt" };
    string[] items = new string[] { "NewFolder", "Refresh", "Upload", "View", "Details", "Rename", "Cut", "Copy", "Paste", "Encrypt", "Decrypt", "SortBy" };
    string[] layout = new string[] { "SortBy", "View", "Refresh", "|", "Details" };
    string myPath = null;
    var num = 0.00;

    @if (SignInManager.IsSignedIn(User))
    {   if(User.IsInRole("Admin"))
        {
            myPath = "";
        }
        else
        {
            myPath = "/"+ UserManager.GetUserAsync(User).Result.Company + "/";

            DirectoryInfo info = new DirectoryInfo(@"/var/www/html/imspulse/bunch-box" + myPath);
            long size = 0;
            foreach (string file in Directory.GetFiles(@"/var/www/html/imspulse/bunch-box" + myPath, "*.*", SearchOption.AllDirectories))
            {
                size += new FileInfo(file).Length;
            }
            num = Math.Round((double)size / (double)(1024 * 1024), 2);
        }

    }
    else
    {
        myPath = "";
    }



}

 @if(!User.IsInRole("Admin"))
{
        <div class="alert alert-warning" role="alert">
          <p>Your company has currently used @num MB of space.</p>
        </div>
}else{
     <div class="alert alert-info" role="alert">
          <p>You are the administrator. You have full access to all company documents</p>
        </div>
}
<div class="control-section">
    <div class="sample-container" id="container" style="padding:10px">
            <ejs-filemanager maxFileSize="233332" id="filemanager" allowDragAndDrop="true" Path="@myPath" cssClass="filemanager" toolbarClick="menuClick" toolbarCreate="onCreate" menuClick="menuClick" fileOpen="onFileOpen">
                <e-filemanager-navigationpanesettings hidden="true"></e-filemanager-navigationpanesettings>
            <e-filemanager-ajaxsettings url="/Home/FileOperations"
                                        downloadUrl="/Home/Download"
                                        uploadUrl="/Home/Upload"
                                        getImageUrl="/Home/GetImage">
            </e-filemanager-ajaxsettings>
               <e-filemanager-contextmenusettings file="files" folder="folder" layout="layout" >
            </e-filemanager-contextmenusettings>
            <e-filemanager-toolbarsettings items="@items"></e-filemanager-toolbarsettings>

            @if(!User.IsInRole("Master"))
            {
                 <e-filemanager-navigationpanesettings visible="false">
                </e-filemanager-navigationpanesettings>
            } 

        </ejs-filemanager>
         <ejs-dialog visible="false" id="default_dialog" width="500px" target="#container" showCloseIcon="true" header="Protect Your Document">
            <e-content-template>

                <form method="post">
                    <div class='form-group'><label for='name'>Password:</label><input type='password' value='' name="password" class='form-control' id='password'></div>
                    <input type='hidden' value='' name="path" class='form-control' id='path'>
                    <input type='hidden' value='encrypt' name="state" class='form-control' id='state'>

                    <button class="btn btn-outline-primary float-end">Protect</button>
                </form>
            </e-content-template>
      
        </ejs-dialog>
            <ejs-dialog visible="false" id="default_dialog2" width="500px" target="#container" showCloseIcon="true" header="Unprotect Your Document">
            <e-content-template>
                <form method="post">
                    <div class='form-group'><label for='name'>Password:</label><input type='password' value='' name="password" class='form-control' id='password2'></div>
                    <input type='hidden' value='' name="path" class='form-control' id='path2'>
                    <input type='hidden' value='decrypt' name="state" class='form-control' id='state'>
                    <button class="btn btn-outline-warning float-end">Unprotect</button>
                </form>
            </e-content-template>
      
        </ejs-dialog>
        
    </div>
    <div>
        <ejs-documenteditorcontainer id="doccontainer" created="onCreate2"></ejs-documenteditorcontainer>
    </div>
    <iframe id="my_iframe" style="display:none;"></iframe>

 
<script>

     var container;
    document.getElementById("element").addEventListener('click', function () {
    var filemanager = document.getElementById("file").ej2_instances[0];
    var files = filemanager.getSelectedFiles();
    for (var i = 0; i < files.length; i++) {
        var path = files[i].filterPath + files[i].name;
            alert(path);
        }
    });
    function menuClick(args) {
        if (args.item.text === 'Encrypt') {
            if (args.fileDetails[0].isFile) {
                var dialog = document.getElementById("default_dialog").ej2_instances[0];
                document.getElementById("path").setAttribute("value", args.fileDetails[0].filterPath + args.fileDetails[0].name);
                dialog.show();
            }
          
        }
         if (args.item.text === 'Decrypt') {
            if (args.fileDetails[0].isFile) {
                var dialog = document.getElementById("default_dialog2").ej2_instances[0];
                document.getElementById("path2").setAttribute("value", args.fileDetails[0].filterPath + args.fileDetails[0].name);
                dialog.show();
            }
          
        }
        if (args.item.text === 'Edit') {
            if (args.fileDetails[0].isFile) {
                var dialog = document.getElementById("default_dialog3").ej2_instances[0];
                dialog.show();
             
            }
          
        }
  

    }

    function onCreate2(args){
        var documenteditorElement = document.getElementById("doccontainer");
        container = documenteditorElement.ej2_instances[0];
        var sfdt = { "sections": [{ "sectionFormat": { "pageWidth": 612, "pageHeight": 792, "leftMargin": 72, "rightMargin": 72, "topMargin": 72, "bottomMargin": 72, "differentFirstPage": false, "differentOddAndEvenPages": false, "headerDistance": 36, "footerDistance": 36, "bidi": false }, "blocks": [{ "paragraphFormat": { "afterSpacing": 30, "styleName": "Heading 1", "listFormat": {} }, "characterFormat": {}, "inlines": [{ "characterFormat": {}, "text": "Adventure Works Cycles" }] }], "headersFooters": { "header": { "blocks": [{ "paragraphFormat": { "listFormat": {} }, "characterFormat": {}, "inlines": [] }] }, "footer": { "blocks": [{ "paragraphFormat": { "listFormat": {} }, "characterFormat": {}, "inlines": [] }] } } }], "characterFormat": { "bold": false, "italic": false, "fontSize": 11, "fontFamily": "Calibri", "underline": "None", "strikethrough": "None", "baselineAlignment": "Normal", "highlightColor": "NoColor", "fontColor": "empty", "fontSizeBidi": 11, "fontFamilyBidi": "Calibri", "allCaps": false }, "paragraphFormat": { "leftIndent": 0, "rightIndent": 0, "firstLineIndent": 0, "textAlignment": "Left", "beforeSpacing": 0, "afterSpacing": 0, "lineSpacing": 1.0791666507720947, "lineSpacingType": "Multiple", "listFormat": {}, "bidi": false }, "defaultTabWidth": 36, "trackChanges": false, "enforcement": false, "hashValue": "", "saltValue": "", "formatting": false, "protectionType": "NoProtection", "dontUseHTMLParagraphAutoSpacing": false, "formFieldShading": true, "styles": [{ "name": "Normal", "type": "Paragraph", "paragraphFormat": { "lineSpacing": 1.149999976158142, "lineSpacingType": "Multiple", "listFormat": {} }, "characterFormat": { "fontFamily": "Calibri" }, "next": "Normal" }, { "name": "Default Paragraph Font", "type": "Character", "characterFormat": {} }, { "name": "Heading 1 Char", "type": "Character", "characterFormat": { "fontSize": 16, "fontFamily": "Calibri Light", "fontColor": "#2F5496" }, "basedOn": "Default Paragraph Font" }, { "name": "Heading 1", "type": "Paragraph", "paragraphFormat": { "beforeSpacing": 12, "afterSpacing": 0, "outlineLevel": "Level1", "listFormat": {} }, "characterFormat": { "fontSize": 16, "fontFamily": "Calibri Light", "fontColor": "#2F5496" }, "basedOn": "Normal", "link": "Heading 1 Char", "next": "Normal" }, { "name": "Heading 2 Char", "type": "Character", "characterFormat": { "fontSize": 13, "fontFamily": "Calibri Light", "fontColor": "#2F5496" }, "basedOn": "Default Paragraph Font" }, { "name": "Heading 2", "type": "Paragraph", "paragraphFormat": { "beforeSpacing": 2, "afterSpacing": 6, "outlineLevel": "Level2", "listFormat": {} }, "characterFormat": { "fontSize": 13, "fontFamily": "Calibri Light", "fontColor": "#2F5496" }, "basedOn": "Normal", "link": "Heading 2 Char", "next": "Normal" }, { "name": "Heading 3", "type": "Paragraph", "paragraphFormat": { "leftIndent": 0, "rightIndent": 0, "firstLineIndent": 0, "textAlignment": "Left", "beforeSpacing": 2, "afterSpacing": 0, "lineSpacing": 1.0791666507720947, "lineSpacingType": "Multiple", "outlineLevel": "Level3", "listFormat": {} }, "characterFormat": { "fontSize": 12, "fontFamily": "Calibri Light", "fontColor": "#1F3763" }, "basedOn": "Normal", "link": "Heading 3 Char", "next": "Normal" }, { "name": "Heading 3 Char", "type": "Character", "characterFormat": { "fontSize": 12, "fontFamily": "Calibri Light", "fontColor": "#1F3763" }, "basedOn": "Default Paragraph Font" }, { "name": "Heading 4", "type": "Paragraph", "paragraphFormat": { "leftIndent": 0, "rightIndent": 0, "firstLineIndent": 0, "textAlignment": "Left", "beforeSpacing": 2, "afterSpacing": 0, "lineSpacing": 1.0791666507720947, "lineSpacingType": "Multiple", "outlineLevel": "Level4", "listFormat": {} }, "characterFormat": { "italic": true, "fontFamily": "Calibri Light", "fontColor": "#2F5496" }, "basedOn": "Normal", "link": "Heading 4 Char", "next": "Normal" }, { "name": "Heading 4 Char", "type": "Character", "characterFormat": { "italic": true, "fontFamily": "Calibri Light", "fontColor": "#2F5496" }, "basedOn": "Default Paragraph Font" }, { "name": "Heading 5", "type": "Paragraph", "paragraphFormat": { "leftIndent": 0, "rightIndent": 0, "firstLineIndent": 0, "textAlignment": "Left", "beforeSpacing": 2, "afterSpacing": 0, "lineSpacing": 1.0791666507720947, "lineSpacingType": "Multiple", "outlineLevel": "Level5", "listFormat": {} }, "characterFormat": { "fontFamily": "Calibri Light", "fontColor": "#2F5496" }, "basedOn": "Normal", "link": "Heading 5 Char", "next": "Normal" }, { "name": "Heading 5 Char", "type": "Character", "characterFormat": { "fontFamily": "Calibri Light", "fontColor": "#2F5496" }, "basedOn": "Default Paragraph Font" }, { "name": "Heading 6", "type": "Paragraph", "paragraphFormat": { "leftIndent": 0, "rightIndent": 0, "firstLineIndent": 0, "textAlignment": "Left", "beforeSpacing": 2, "afterSpacing": 0, "lineSpacing": 1.0791666507720947, "lineSpacingType": "Multiple", "outlineLevel": "Level6", "listFormat": {} }, "characterFormat": { "fontFamily": "Calibri Light", "fontColor": "#1F3763" }, "basedOn": "Normal", "link": "Heading 6 Char", "next": "Normal" }, { "name": "Heading 6 Char", "type": "Character", "characterFormat": { "fontFamily": "Calibri Light", "fontColor": "#1F3763" }, "basedOn": "Default Paragraph Font" }], "lists": [], "abstractLists": [], "comments": [], "revisions": [], "customXml": [] };
        // open the default document.
        container.open(JSON.stringify(sfdt));
    }

     function onCreate(args) {
        for (var i = 0; i < args.items.length; i++) {
            if (args.items[i].text == 'Encrypt') {
                args.items[i].prefixIcon = 'e-icons e-fe-lock';
            }
            if (args.items[i].text == 'Decrypt') {
                args.items[i].prefixIcon = 'e-icons e-fe-lock';
            }
        }
    }

    function onFileOpen(args) {
        if (args.fileDetails.isFile) {
            if (args.fileDetails.name.includes('pdf')) {
                window.open('https://imspulse.com/bunch-box' + args.fileDetails.filterPath + args.fileDetails.name, '_blank');

            }else{
                document.getElementById('my_iframe').src = 'https://imspulse.com/bunch-box' + args.fileDetails.filterPath + args.fileDetails.name;
                alert(args.fileDetails.name + " is opened");
            }
  
        }

    }
    
</script>

    @if (ViewData["Message"] != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                alert('@ViewData["Message"]');
            };
        </script>
    }
    @if (ViewBag.MyMessage != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                alert('@ViewBag.MyMessage');
            };
        </script>
    }
    <style>       
        .e-fe-lock::before {
            content: '\e735';
        }

        .e-empty-inner-content {
            display: none;
        }

          /*Style to hide the root folder from navigation pane*/ 
        .filemanager .e-treeview .e-list-item.e-level-1 > .e-text-content { 
            display: none; 
        } 
 
        /*Style to hide the root folder from breadcrumb*/ 
        .filemanager .e-address .e-address-list-item:nth-child(1) { 
            display: none; 
        } 
 
        /*Style to hide the icon from breadcrumb*/ 
        .filemanager .e-address .e-address-list-item:nth-child(2) .e-icons { 
            display: none; 
        } 
     
       
    </style>
       @if (!User.IsInRole("Master")){
           <style>
                ul.e-list-parent.e-ul .e-level-2 { 
                display: none; 
            } 
           </style>         
        }
</div>