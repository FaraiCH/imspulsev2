@page
@model docmaster.Areas.Identity.Pages.Account.Manage.ManagerModel
@using Microsoft.AspNetCore.Identity
@using docmaster.Areas.Identity.Data
@inject SignInManager<docmasterUser> SignInManager
@inject UserManager<docmasterUser> UserManager
@{
    string[] files = new string[] { "Open", "|", "Details", "|", "Rename", "|", "Cut",  "|", "Edit",  "|",  "Copy", "|", "Paste", "|", "Delete", "|", "Encrypt", "|", "Decrypt", "|", "Preview" };
    string[] folder = new string[] { "Open", "|", "Details" , "|", "Rename","|", "Cut", "|", "Copy", "|", "Paste", "|", "Delete", "|", "Encrypt", "|", "Decrypt" };
    string[] items = new string[] { "NewFolder", "Refresh", "Upload", "View", "Details","Edit", "Rename", "Cut", "Copy", "Paste", "Encrypt", "Decrypt", "SortBy" };
    string[] layout = new string[] { "SortBy", "View", "Refresh", "|", "Details" };
    string myPath = null;
    var num = 0.00;

    @if (SignInManager.IsSignedIn(User))
    {   if(User.IsInRole("Admin"))
        {
            myPath = "";
        }
        else
        {
            myPath = "/"+ UserManager.GetUserAsync(User).Result.Company + "/";

            DirectoryInfo info = new DirectoryInfo(@"/var/www/html/imspulse/bunch-box" + myPath);
            long size = 0;
            foreach (string file in Directory.GetFiles(@"/var/www/html/imspulse/bunch-box" + myPath, "*.*", SearchOption.AllDirectories))
            {
                size += new FileInfo(file).Length;
            }
            num = Math.Round((double)size / (double)(1024 * 1024), 2);
        }

    }
    else
    {
        myPath = "";
    }



}

 @if(!User.IsInRole("Admin"))
{
        <div class="alert alert-warning" role="alert">
          <p>Your company has currently used @num MB of space.</p>
        </div>
}else{
     <div class="alert alert-info" role="alert">
          <p>You are the administrator. You have full access to all company documents</p>
        </div>
}
<div class="control-section">
    <div class="sample-container" id="container" style="padding:10px">
            <ejs-filemanager maxFileSize="233332" id="filemanager" allowDragAndDrop="true" Path="@myPath" cssClass="filemanager" toolbarClick="menuClick" toolbarCreate="onCreate" menuClick="menuClick" fileOpen="onFileOpen">
                <e-filemanager-navigationpanesettings hidden="true"></e-filemanager-navigationpanesettings>
            <e-filemanager-ajaxsettings url="/Home/FileOperations"
                                        downloadUrl="/Home/Download"
                                        uploadUrl="/Home/Upload"
                                        getImageUrl="/Home/GetImage">
            </e-filemanager-ajaxsettings>
               <e-filemanager-contextmenusettings file="files" folder="folder" layout="layout" >
            </e-filemanager-contextmenusettings>
            <e-filemanager-toolbarsettings items="@items"></e-filemanager-toolbarsettings>

            @if(!User.IsInRole("Master"))
            {
                 <e-filemanager-navigationpanesettings visible="false">
                </e-filemanager-navigationpanesettings>
            } 

        </ejs-filemanager>
         <ejs-dialog visible="false" id="default_dialog" width="500px" target="#container" showCloseIcon="true" header="Protect Your Document">
            <e-content-template>

                <form method="post" asp-controller="">
                    <div class='form-group'><label for='name'>Password:</label><input type='password' value='' name="password" class='form-control' id='password'></div>
                    <input type='hidden' value='' name="path" class='form-control' id='path'>
                    <input type='hidden' value='encrypt' name="state" class='form-control' id='state'>

                    <button class="btn btn-outline-primary float-end">Protect</button>
                </form>
            </e-content-template>
      
        </ejs-dialog>
        
             <ejs-dialog visible="false" id="default_dialog2" width="500px" target="#container" showCloseIcon="true" header="Unprotect Your Document">
            <e-content-template>
                <form method="post">
                    <div class='form-group'><label for='name'>Password:</label><input type='password' value='' name="password" class='form-control' id='password2'></div>
                    <input type='hidden' value='' name="path" class='form-control' id='path2'>
                    <input type='hidden' value='decrypt' name="state" class='form-control' id='state'>
                    <button class="btn btn-outline-warning float-end">Unprotect</button>
                </form>
            </e-content-template>
            
      
        </ejs-dialog>

   
    </div>
    <iframe id="my_iframe" style="display:none;"></iframe>

</div>

<div id="docedit">
    <ejs-dialog isModal="true" visible="false" id="default_dialog3" target="#docedit" style="max-width: 80%" height="700px"  overlayClick="onOverlayClick"  showCloseIcon="true" header="Edit Document">
        <e-content-template>
            <ejs-button id="element" title="Save your work online." cssClass="btn btn-primary" content="Save Document"></ejs-button>
            <ejs-documenteditor enableOptionsPane=true isReadOnly=false enableEditor=true enableContextMenu=true enableSelection=true enableSfdtExport=true enableWordExport=true height="600px" id="doccontainer"></ejs-documenteditor>
        </e-content-template>
      
    </ejs-dialog>
</div>
 
<script>
   
    function menuClick(args) {
        if (args.item.text === 'Encrypt') {
            if (args.fileDetails[0].isFile) {
                var dialog = document.getElementById("default_dialog").ej2_instances[0];
                document.getElementById("path").setAttribute("value", args.fileDetails[0].filterPath + args.fileDetails[0].name);
                dialog.show();
            }
          
        }
         if (args.item.text === 'Decrypt') {
            if (args.fileDetails[0].isFile) {
                var dialog = document.getElementById("default_dialog2").ej2_instances[0];
                document.getElementById("path2").setAttribute("value", args.fileDetails[0].filterPath + args.fileDetails[0].name);
                dialog.show();
            
            }

             
          
        }
        if (args.item.text === 'Edit') {
            var fullName = "/var/www/html/imspulse/bunch-box"+ args.fileDetails[0].filterPath + args.fileDetails[0].name;
            var payload = { fullName: fullName }; // change name
            $.ajax({
                type: 'POST',
                url: '/Home/Demo2/',
                // contentType: 'application/json', // remove this line
                data: payload, //remove JSON.stringify
                success: function (result) {
                    var documenteditorElement = document.getElementById("doccontainer");
                    container = documenteditorElement.ej2_instances[0];
                    container.keyDown = function (args) {
                        var keyCode = args.event.which || args.event.keyCode;

                        var isCtrlKey = (args.event.ctrlKey || args.event.metaKey) ? true : ((keyCode === 17) ? true : false);

                        var isAltKey = args.event.altKey ? args.event.altKey : ((keyCode === 18) ? true : false);

                        // 83 is the character code for 'S'
                        if (isCtrlKey && !isAltKey && keyCode === 83) {
                            //To prevent default save operation, set the isHandled property to true
                            args.isHandled = true;
                            documentEditor.save(args.fileDetails[0].name, 'Docx');
                            args.event.preventDefault();
                        } else if (isCtrlKey && isAltKey && keyCode === 83) {
                            documentEditor.save(args.fileDetails[0].name, 'Docx');
                        }
                    }
                                    
                    container.open(result);   
                    
                    var dialog = document.getElementById("default_dialog3").ej2_instances[0];                
                    dialog.show();

                    
                }
            });


            document.getElementById("element").addEventListener('click', function () {

                var documenteditorElement = document.getElementById("doccontainer");
                container = documenteditorElement.ej2_instances[0];
                var fullName = container.serialize();
                var payload = { "fullName": fullName, "path": "/var/www/html/imspulse/bunch-box"+ args.fileDetails[0].filterPath + args.fileDetails[0].name }; // change name
                var strJson = JSON.stringify(payload);
                $.ajax({
                    type: 'POST',
                    url: '/Home/Demo/',              
                    contentType: 'application/json', // remove this line
                    data: strJson, //remove JSON.stringify
                    success: function (result) {
                        alert(result);                  
                    }
                });
            });
          
        }
 
    }


     function onCreate(args) {
        for (var i = 0; i < args.items.length; i++) {
            if (args.items[i].text == 'Encrypt') {
                args.items[i].prefixIcon = 'e-icons e-fe-lock';
            }
            if (args.items[i].text == 'Decrypt') {
                args.items[i].prefixIcon = 'e-icons e-fe-lock';
            }
        }
    }

    function onOverlayClick() {
       
    }

    function onFileOpen(args) {
        if (args.fileDetails.isFile) {
            if (args.fileDetails.name.includes('pdf')) {
                window.open('https://imspulse.com/bunch-box' + args.fileDetails.filterPath + args.fileDetails.name, '_blank');

            }else{
                document.getElementById('my_iframe').src = 'https://imspulse.com/bunch-box' + args.fileDetails.filterPath + args.fileDetails.name;
                alert(args.fileDetails.name + " is opened");
            }
  
        }

    }
    
</script>


    @if (ViewData["Message"] != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                alert('@ViewData["Message"]');
            };
        </script>
    }
    @if (ViewBag.MyMessage != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                alert('@ViewBag.MyMessage');
            };
        </script>
    }
    <style>       
        .e-fe-lock::before {
            content: '\e735';
        }

        .e-empty-inner-content {
            display: none;
        }

          /*Style to hide the root folder from navigation pane*/ 
        .filemanager .e-treeview .e-list-item.e-level-1 > .e-text-content { 
            display: none; 
        } 
 
        /*Style to hide the root folder from breadcrumb*/ 
        .filemanager .e-address .e-address-list-item:nth-child(1) { 
            display: none; 
        } 
 
        /*Style to hide the icon from breadcrumb*/ 
        .filemanager .e-address .e-address-list-item:nth-child(2) .e-icons { 
            display: none; 
        } 
        #default_dialog3 {
            height: 100%;
            width: 100%;
      
            padding: 0px;
            margin: 0px;
            left: 0px;
            right: 0px;
            bottom: 0px;
            top: 0px;
            z-index: 0
        }
       
    </style>
       @if (!User.IsInRole("Master")){
           <style>
                ul.e-list-parent.e-ul .e-level-2 { 
                display: none; 
            } 
           </style>         
        }
