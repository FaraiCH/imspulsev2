@page
@model docmaster.Areas.Identity.Pages.Account.Manage.ManagerModel
@using Microsoft.AspNetCore.Identity
@using docmaster.Areas.Identity.Data
@inject SignInManager<docmasterUser> SignInManager
@inject UserManager<docmasterUser> UserManager
@{
    string[] files = new string[] { "Open", "|", "Details", "|", "Rename", "|", "Cut", "|", "Copy", "|", "Paste", "|", "Delete", "|", "Encrypt", "|", "Decrupt", "|", "Preview" };
    string[] folder = new string[] { "Open", "|", "Details" , "|", "Rename", "|", "|", "Cut", "|", "Copy", "|", "Paste", "|", "Delete", "|", "Encrypt", "|", "Decrupt" };
    string[] layout = new string[] { "SortBy", "View", "Refresh", "|", "Details" };
    string myPath = null;
    @if (SignInManager.IsSignedIn(User))
    {   
        myPath = "/"+ UserManager.GetUserAsync(User).Result.Company + "/";
    }
    else
    {
        myPath = "";
    }

}

<div class="control-section">
    <div class="sample-container" style="padding:10px">
            <ejs-filemanager id="filemanager" allowDragAndDrop="true" Path="@myPath" cssClass="filemanager" menuClick="menuClick">
                <e-filemanager-navigationpanesettings hidden="true"></e-filemanager-navigationpanesettings>
            <e-filemanager-ajaxsettings url="/Home/FileOperations"
                                        downloadUrl="/Home/Download"
                                        uploadUrl="/Home/Upload"
                                        getImageUrl="/Home/GetImage">
            </e-filemanager-ajaxsettings>
               <e-filemanager-contextmenusettings file="files" folder="folder" layout="layout" >
            </e-filemanager-contextmenusettings>
        </ejs-filemanager>
    </div>
 
    <script>
        function menuClick(args) {
            if (args.item.text === 'Custom') {
                alert('You have clicked custom menu item')
        }
}
        document.getElementById("element").addEventListener('click', function () {
            var filemanager = document.getElementById("file").ej2_instances[0];
            var files = filemanager.getSelectedFiles();
            for (var i = 0; i < files.length; i++) {
                var path = files[i].filterPath + files[i].name;
                console.log(path);
            }
        });
    </script>
    <style>
        .e-empty-inner-content {
            display: none;
        }

          /*Style to hide the root folder from navigation pane*/ 
        .filemanager .e-treeview .e-list-item.e-level-1 > .e-text-content { 
            display: none; 
        } 
 
        /*Style to hide the root folder from breadcrumb*/ 
        .filemanager .e-address .e-address-list-item:nth-child(1) { 
            display: none; 
        } 
 
        /*Style to hide the icon from breadcrumb*/ 
        .filemanager .e-address .e-address-list-item:nth-child(2) .e-icons { 
            display: none; 
        } 

        ul.e-list-parent.e-ul .e-level-2 { 
            display: none; 
        } 
    </style>
</div>