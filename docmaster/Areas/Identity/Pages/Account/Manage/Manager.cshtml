@page
@model docmaster.Areas.Identity.Pages.Account.Manage.ManagerModel
@using Microsoft.AspNetCore.Identity
@using MySqlConnector
@using System.Data
@using docmaster.Areas.Identity.Data
@inject SignInManager<docmasterUser> SignInManager
@inject UserManager<docmasterUser> UserManager
@{
    string[] files = new string[] { "Rename", "|", "Cut",  "|", "Edit",  "|",  "Copy", "|", "Paste", "|", "Hide", "|", "Delete", "|", "Encrypt", "|", "Decrypt" };
    string[] folder = new string[] { "Open", "|", "Rename","|", "Cut", "|", "Copy", "|", "Paste", "|", "Hide", "|", "Delete", "|", "Encrypt", "|", "Decrypt" };
    string[] items = new string[] { "Edit", "NewFolder", "Refresh", "Upload", "View", "Rename", "Cut", "Copy", "Paste", "Encrypt", "Decrypt", "Hide", "Show Hidden", "SortBy" };
    string[] layout = new string[] { "SortBy", "View", "Refresh", "|" };
    string myPath = null;
    var num = 0.00;
    var count = 0;
    DataRow[] rows = new DataRow[]{};
    @if (SignInManager.IsSignedIn(User))
    {   if(User.IsInRole("SuperUser"))
        {
            myPath = "";
        }
        else
        {
            if (!User.IsInRole("Admin"))
            {
                files = new string[] { "Edit" };
                folder = new string[] { };
                items = new string[] { "Edit","Refresh", "View", "SortBy" };
                layout = new string[] { "SortBy", "View", "Refresh" };
            }
            else
            {
                if (User.IsInRole("Basic"))
                {
                    files = new string[] { "Edit" };
                    folder = new string[] { };
                    items = new string[] { "Edit","Refresh", "View", "SortBy" };
                    layout = new string[] { "SortBy", "View", "Refresh" };
                }
            }
            myPath = "/"+ UserManager.GetUserAsync(User).Result.Company + "/";

            DirectoryInfo info = new DirectoryInfo(@"/var/www/html/imspulse/bunch-box" + myPath);
            long size = 0;
            foreach (string file in Directory.GetFiles(@"/var/www/html/imspulse/bunch-box" + myPath, "*.*", SearchOption.AllDirectories))
            {
                size += new FileInfo(file).Length;
            }
            num = Math.Round((double)size / (double)(1024 * 1024), 2);
        }

    }
    else
    {
        myPath = "";
    }

    using (var conn = new MySqlConnection("Server=92.205.25.31; Database=imspulse; Uid=manny; Pwd=@Paradice1;"))
    {
        conn.Open();

        //// Retrieve all rows
        using (var cmd = new MySqlCommand("SELECT * FROM imspulse.farai_document_hiddens WHERE name='" + UserManager.GetUserAsync(User).Result.Company + "'" , conn))
        {
            var dt = new DataTable();
            dt.Load(cmd.ExecuteReader());
            rows = dt.AsEnumerable().ToArray();
        }
    }

}

@if (!User.IsInRole("Suspended"))
{
    <p>To view your subscription and the features you have access to, please click <button id="myview" class="viewbutton btn btn-primary">here</button></p>
 
  
    <div class="control-section" id="maincon">

        <ejs-dialog isModal="true" visible="false" id="default_dialog10" target="#maincon" style="max-width: 80%" height="700px" header="Document Management Subscription and Permissions"  overlayClick="onOverlayClick"  showCloseIcon="true" header="Edit Document">
        <e-content-template>
            @if(!User.IsInRole("SuperUser"))
            {       
                <div class="alert alert-warning" role="alert">
                    @if (User.IsInRole("Admin"))
                    {
                        if (User.IsInRole("Basic"))
                        {
                            <p>You are the admin of your company. However, you have a basic subscription.</p>
                            <p>Here is what you have access to:</p>
                            <p>1. You are limited to only 50MB of domain space for your documents. </p>
                            <p>2. Use Online Document Editors to View, Edit and Save Documents. </p>
                            <p>3. Automatically allocate documents to Obselete folders when revised. </p>
                            <br />
                            <p>Here's what you don't have access to.</p>
                            <p>1. You cannot encrypt documents.</p>
                            <p>2. You cannot hide documents or folders</p>
                            <p>Upgrade your plan to Premium or Ultimate to protect your documents and have greator space.</p>
                        }
                        else
                        {
                            <p>You are the admin of your company.</p>
                            <p>Here is what you have access to:</p>
                            <p>1. Use Online Document Editors to View, Edit and Save Documents. </p>
                            <p>2. Encrypt documents to protect content from being seen. </p>
                            <p>3. Hide documents and folders from any none admin users. </p>
                            <p>4. Automatically allocate documents to Obselete folders when revised. </p>
                            <p>5. Overwrite documents on upload. </p>
                        }
           
                    }
                    else
                    {
                        <p>You only have read only access. You can view authorised documents but cannot edit or manipulate.</p>
                    }
                    
                </div>
            }
        else
        {
            <div class="alert alert-info" role="alert">
                <p>You are the Super User. You have full access to all company documents</p>
                <p>You have full access to all IMS Pulse Features:</p>
            </div>
        }
        </e-content-template>
      
    </ejs-dialog>
    <div class="sample-container" id="container" style="padding:10px">
            <ejs-filemanager success="onSuccess" maxFileSize="233332" id="filemanager" allowDragAndDrop="true" Path="@myPath" cssClass="filemanager" toolbarClick="toolbarClick" toolbarCreate="onCreate" menuClick="menuClick" fileOpen="onFileOpen">
                <e-filemanager-navigationpanesettings></e-filemanager-navigationpanesettings>
            <e-filemanager-ajaxsettings url="/Home/FileOperations"
                                        downloadUrl="/Home/Download"
                                        uploadUrl="/Home/Upload"
                                        getImageUrl="/Home/GetImage">
            </e-filemanager-ajaxsettings>
               <e-filemanager-contextmenusettings file="files" folder="folder" layout="layout" >
            </e-filemanager-contextmenusettings>
            <e-filemanager-toolbarsettings class="maker" items="@items"></e-filemanager-toolbarsettings>

            @if(!User.IsInRole("Master"))
            {
                 <e-filemanager-navigationpanesettings visible="false">
                </e-filemanager-navigationpanesettings>
            } 

        </ejs-filemanager>
         <ejs-dialog created="made" visible="false" id="default_dialog" width="500px" target="#container" showCloseIcon="true" header="Protect Your Document">
            <e-content-template>
                <div class="unpro">
                    <div class='form-group'><label for='password'>Password:</label><input type='text' value='' name="mypass" class='form-control' id='mypassword'></div>
                    <button id="encry" class="btn btn-outline-primary float-end">Protect</button>
                </div>
               
               
            </e-content-template>
      
        </ejs-dialog>
        
        <ejs-dialog created="made2" visible="false" id="default_dialog2" width="500px" target="#container" showCloseIcon="true" header="Unprotect Your Document">
            <e-content-template>
             <div class="unpro">
                <div class='form-group'><label for='password'>Password:</label><input type='text' value='' name="mypass" class='form-control' id='mypassword2'></div>
                <button id="decry" class="btn btn-outline-warning float-end">Unprotect</button>
             </div>
                  
            </e-content-template>
            
      
        </ejs-dialog>
        <br>
        <br>
        @if (!User.IsInRole("SuperUser"))
        {
            <p>Your company has currently used <span class="btn btn-dark">@num</span> <b>MB</b> of space.</p>

            
        }
        @if (User.IsInRole("Admin"))
        {
            <p>Documents in <span style="background: red; color:white;">red</span> are hidden from normal users. Click 'Show Hidden' on the toolbar to unhide.</p>    
        }
        </div>
    <iframe id="my_iframe" style="display:none;"></iframe>

</div>

<div id="docedit">
    <ejs-dialog isModal="true" visible="false" id="default_dialog3" target="#docedit" style="max-width: 80%" height="700px"  overlayClick="onOverlayClick"  showCloseIcon="true" header="Edit Document">
        <e-content-template>
            @if (User.IsInRole("Admin")){
                            <ejs-button id="element" title="Save your work online."  class="btn btn-primary" content="Save Document"></ejs-button>
                            <ejs-button id="revelement" title="Add Revision field" class="btn btn-primary" content="Insert Revision Field"></ejs-button>
                           @* <ejs-button id="hidetext" title="Hide/Unhide Text in Document" class="btn btn-primary" content="Hide/Unhide Text"></ejs-button>*@
            }

            <ejs-documenteditorcontainer enableToolbar=false height="600px" id="doccontainer"></ejs-documenteditorcontainer>
        </e-content-template>
      
    </ejs-dialog>

</div>

<div id="spreedsheetedit">
        <ejs-dialog isModal="true" visible="false" id="default_dialog4" target="#spreedsheetedit" style="max-width: 80%" height="700px"  overlayClick="onOverlayClick"  showCloseIcon="true" header="Edit Document">
        <e-content-template>
             @if (User.IsInRole("Admin")){
                             <ejs-button id="elementsp" title="Save your work online." cssClass="btn btn-primary" content="Save Document"></ejs-button>
             }

            <ejs-spreadsheet id="spreadsheet" saveUrl="/Home/SaveExcel" allowSave=true height="600px" allowOpen ="true" fileMenuBeforeOpen="fileMenuBeforeOpen"></ejs-spreadsheet>
        </e-content-template>
      
        </ejs-dialog>
</div>

    <ejs-toast class="hidden" id="revtoast" target="#default_dialog3" extendedTimeout="10000" width="300" height="200">
        <e-toast-position X="Center" Y="Top"></e-toast-position>
        <e-content-template>
            <p><img alt='Revision Master' height="60px" width="60px" class='toast-img' src='https://imspulse.com/storage/app/media/favourite.png' /><span class="name"> IMS Pulse Team</span></p>
            <div class="content">
                <p>Hi! &#128512; I noticed that you made a change to this document. Do you want to qualify it as a Revision?</p>
                <button id="yesrev" class="btn btn-success">Yes</button>
                <button id="norev" class="btn btn-danger">No</button>
            </div>
        </e-content-template>
    </ejs-toast>

<div id="pdfedit">
        <ejs-dialog isModal="true" visible="false" id="default_dialog5" target="#pdfedit" style="max-width: 80%" height="700px"  overlayClick="onOverlayClick"  showCloseIcon="true" header="Edit Document">
        <e-content-template>
            <span class="text-warning">The Pdf Editor is in Beta Stage. Saving to the server has not been implemented. However, you can download the pdf to your PC.</span>
   @*           @if (User.IsInRole("Admin"))
                {
                    <ejs-button id="elementpdf" title="Save your work online." class="btn btn-primary" content="Save Document"></ejs-button>
                }*@
            <ejs-pdfviewer id="pdfviewer"
                style="height:600px"
                serviceUrl="/PDFViewer"
                enableToolbar="true">
            </ejs-pdfviewer>
        </e-content-template>
      
        </ejs-dialog>
</div>

    <div id="myhides">
        <ejs-dialog isModal="true" visible="false" id="default_dialog7" target="#maincon" style="max-width: 80%" height="700px"  overlayClick="onOverlayClick"  showCloseIcon="true" header="Showing Hidden Items">
        <e-content-template>
            <table id="mytable" class="table table-data">
                <thead>
                    <tr>
                        <td>Hidden Item</td>
                        <td>Unhide</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var p in rows)
                    {
                   
                        <tr>
                            <td>
                                <input type='hidden' value='@p["document_path"]' name="hider" class='form-control' id='hider_@count'>
                                @p["document_path"]                               
                            </td>
                            <td>
                                <button id="comhide_@count" class="btn btn-info">Unhide</button>
                            </td>
                                                
                        </tr>

                        count++;
                    }                  
                </tbody>
            </table>
        </e-content-template>
      
        </ejs-dialog>
        <br>
       
    </div>
  
}
else
{
    <h2 class="btn btn-danger">Your Account Has Been Suspended. Please Contact The IMS Pulse Team For Further Details.</h2>
}



<script>

    function getem(){
    
    }
    function onSuccess(args){

        var clientId = "10248VINET"; 
        let ajax = new ej.base.Ajax({ 
            url: '/Home/Hide', 
            data: JSON.stringify(clientId),  // pass the string value  
            type: 'POST', 
            contentType: 'application/json' 
        }); 
        ajax.send(); 
        ajax.onSuccess = function (data) { 
            myarray = data.split(";");          
            var filemanagerElement = document.getElementById("filemanager");
			var elements = filemanagerElement.querySelectorAll(".e-layout-content .e-list-item");
           
			for(var i=0; i < elements.length; i++){
                for (var j = 0; j < myarray.length; j++) {
                    var filefolder = myarray[j].substring(myarray[j].lastIndexOf('/') + 1);
                    if (elements[i].innerText == filefolder) {
                        @{
                            if (!User.IsInRole("Admin"))
                            {
                                                <text>
                                                    elements[i].hidden = true;
                                                </text>
                            }
                            else
                            {
                                        
                                                <text>
                                                    elements[i].classList.add("myhidden");
                                                </text>
                            }
                        }
                      
                    } 
                }
                            
			}
        }; 

        $("#myview").unbind('click').bind('click', function() {
            var dialog = document.getElementById("default_dialog10").ej2_instances[0];
            dialog.show();
        });
      
        if(args.action=="rename"){
            var formData = { fullName: args.result.files[0].name, path: args.result.files[0].filterPath };
            var strJson = JSON.stringify(formData)
            $.ajax({
                type: 'POST',
                url: '/Home/Revision/',
                contentType: 'application/json', 
                data: strJson,
                success: function(result) {
                    toastObj = ejs.notifications.ToastUtility.show(result, 'Success', 2000); 
                }
            });         
        }
    }

    function made() {
        var dialog = document.getElementById("default_dialog").ej2_instances[0];                
              
        dialog.hide();
      
    }
    function fileMenuBeforeOpen(){
        this.hideFileMenuItems(['Save As', 'Open']);
    }
    function made2(){
        var dialog = document.getElementById("default_dialog2").ej2_instances[0];                
              
        dialog.hide();
    }
    function toolbarClick(args) {
        if (args.item.text === 'Encrypt') {
            if (args.fileDetails[0].isFile) {
                var dialog = document.getElementById("default_dialog").ej2_instances[0];
                dialog.show();
                $("#encry").unbind('click').bind('click', function() {
                    var pas2 = document.getElementById('mypassword');
                    var formData = { fullName: pas2.value, path: args.fileDetails[0].filterPath + args.fileDetails[0].name, state: "encrypt" };
                    var strJson = JSON.stringify(formData)
                    $.ajax({
                        type: 'POST',
                        url: '/Home/Protect/',
                        contentType: 'application/json', // remove this line
                        data: strJson, //remove JSON.stringify
                        success: function(result) {
                            toastObj = ejs.notifications.ToastUtility.show(result, 'Success', 2000); 
                            dialog.hide();
                        }
                    });

                });
            }
          
        }
        if (args.item.text === 'Decrypt') {
            if (args.fileDetails[0].isFile) {
                var dialog = document.getElementById("default_dialog2").ej2_instances[0];
                dialog.show();
                $("#decry").unbind('click').bind('click', function() {
                    var pas2 = document.getElementById('mypassword2');
                    var formData = { fullName: pas2.value, path: args.fileDetails[0].filterPath + args.fileDetails[0].name, state: "decrypt" };
                    var strJson = JSON.stringify(formData)
                    $.ajax({
                        type: 'POST',
                        url: '/Home/Protect/',
                        contentType: 'application/json', // remove this line
                        data: strJson, //remove JSON.stringify
                        success: function(result) {
                            toastObj = ejs.notifications.ToastUtility.show(result, 'Success', 2000); 
                            dialog.hide();
                        }
                    });

                });
            }
         
        }

        if (args.item.text === 'Edit') {
            var toast = document.getElementById('revtoast').ej2_instances[0];
            toast.hide();
                   
            if (args.fileDetails[0].name.includes('.doc')) {
                var fullName = args.fileDetails[0].filterPath + args.fileDetails[0].name;
                var payload = { fullName: fullName }; // change name
                $.ajax({
                    type: 'POST',
                    url: '/Home/Demo2/',
                    // contentType: 'application/json', // remove this line
                    data: payload, //remove JSON.stringify
                    success: function (result) {
                    if (!result.includes('Error Message')) {
                            var documenteditorElement = document.getElementById("doccontainer");
                            container = documenteditorElement.ej2_instances[0];

                            container.documentEditor.open(result);
                            @{
                                if (!User.IsInRole("Admin"))
                                {
                                                                                                                                        <text>
                                                                                                                                            container.documentEditor.isReadOnly = true;
                                                                                                                                        </text>                               
                                }
                            }
                            var dialog = document.getElementById("default_dialog3").ej2_instances[0];
                            dialog.show();
                        } else {
                            toastObj = ejs.notifications.ToastUtility.show(result, 'Error', 3000);
                        }
                   
                    }
                });
                $("#revelement").unbind('click').bind('click', function() {
                    var documenteditorElement = document.getElementById("doccontainer");
                    container = documenteditorElement.ej2_instances[0];
                    container.documentEditor.editor.insertField('MERGEFIELD ' + 'Revision' + ' \\* MERGEFORMAT');
                });

                $("#hidetext").unbind('click').bind('click', function() {
            
                    var documenteditorElement = document.getElementById("doccontainer");
                    container = documenteditorElement.ej2_instances[0];
                    var selection = container.documentEditor.selection;
                    // Get the current text color
                    var textColor = selection.characterFormat.fontColor;
                    // Get the background color of the document
                    //var bgColor = container.documentEditor.viewer.backgroundColor;
                    // If the text color is the same as the background color, set it to black (unhide the text)
                    // Otherwise, set it to the background color (hide the text)
                    selection.characterFormat.fontColor = '#000000';
                    container.documentEditor.focusIn();
                });

                $("#element").unbind('click').bind('click', function () {

                    var documenteditorElement = document.getElementById("doccontainer");
                    container = documenteditorElement.ej2_instances[0];
                    var fullName = container.documentEditor.serialize();
                    var payload = { "fullName": fullName, "path": args.fileDetails[0].filterPath + args.fileDetails[0].name }; // change name
                    var strJson = JSON.stringify(payload);
                    $.ajax({
                        type: 'POST',
                        url: '/Home/Demo/',              
                        contentType: 'application/json', // remove this line
                        data: strJson, //remove JSON.stringify
                        success: function (result) {  
                            var fileObj = document.getElementById("filemanager").ej2_instances[0];
                            var dialog = document.getElementById("default_dialog3").ej2_instances[0]; 
                            if (!result.includes('Document Successfully Saved!')) {
                                var toast = document.getElementById('revtoast').ej2_instances[0];
                                toast.show();
                                $("#yesrev").unbind('click').bind('click', function() {
                                    
                                    dialog.hide();                                 
                                   
                                    fileObj.renameFile();                              
                                    var toast = document.getElementById('revtoast').ej2_instances[0];
                                    toast.hide();
                                   
           
                                });
                                $("#norev").unbind('click').bind('click', function() {
                                    toastObj = ejs.notifications.ToastUtility.show(result, 'Success', 3000);
                                    var toast = document.getElementById('revtoast').ej2_instances[0];
                                    toast.hide();
                                });
                            }else{
                                   toastObj = ejs.notifications.ToastUtility.show(result, 'Success', 3000);
                            }

                            fileObj.refreshLayout();
                        }
                    });
                });
            }

            if (args.fileDetails[0].name.includes('.xls')) {
               
                var fullName = args.fileDetails[0].filterPath + args.fileDetails[0].name;
                var payload = { fullName: fullName }; // change name
                $.ajax({
                    type: 'POST',
                    url: '/Home/Demo2/',
                    // contentType: 'application/json', // remove this line
                    data: payload, //remove JSON.stringify
                    success: function (result) {
                        if (!result.includes('Error Message')) {
                            var spreadsheet = ej.base.getComponent(document.getElementById('spreadsheet'), 'spreadsheet');
                            spreadsheet.hideFileMenuItems(['Save As', 'Open']);

                            spreadsheet.openFromJson({ file: result }); // open the file into Spreadsheet

                            var dialog = document.getElementById("default_dialog4").ej2_instances[0];
                            dialog.show();
                        } else {
                            toastObj = ejs.notifications.ToastUtility.show(result, 'Error', 3000);
                        }
                                    
                    }
                });
                $("#elementsp").unbind('click').bind('click', function () { 
                
                    var fullName = args.fileDetails[0].filterPath + args.fileDetails[0].name
                    var ssObj = ej.base.getComponent(document.getElementById('spreadsheet'), 'spreadsheet'); 
                    var pdfSettings = { FitSheetOnOnePage: false }; 
                    ssObj.saveAsJson().then((response) => { 
                            var formData = new FormData(); 
                            formData.append('JSONData', JSON.stringify(response.jsonObject.Workbook)); 
                            formData.append('fileName', 'Sample'); 
                            formData.append('saveType', 'Xlsx'); 
                           
                        $.ajax({ 
                            type: "POST", 
                            url: "/Home/SaveExcel", 
                            data: { JSONData: JSON.stringify(response.jsonObject.Workbook), fileName: args.fileDetails[0].name, saveType: "xlsx",  PDFLayoutSettings: JSON.stringify(pdfSettings), path: fullName }, 
                            success: function (result) { 
                                toastObj = ejs.notifications.ToastUtility.show(result, 'Success', 2000);               
                            } 
                        }) 
                    }); 
                
                }); 

            }

            if (args.fileDetails[0].name.includes('.pdf')) {
           
                var fullName = args.fileDetails[0].filterPath + args.fileDetails[0].name;
                var payload = { fullName: fullName }; // change name
                $.ajax({
                    type: 'POST',
                    url: '/Home/PDFView/',
                    // contentType: 'application/json', // remove this line
                    data: payload, //remove JSON.stringify
                    success: function (result) {
                        //toastObj = ejs.notifications.ToastUtility.show(result, 'Success', 2000);  
                        var pdfViewer = document.getElementById('pdfviewer').ej2_instances[0];  
                        pdfViewer.load(result);
                        var dialog = document.getElementById("default_dialog5").ej2_instances[0];                
                        dialog.show();    
                        
                        //fileObj.refresh();
                         //toastObj = ejs.notifications.ToastUtility.show("IMS PULSE TEAM: The PDF Editor is in future plans. However, as of now, there is no editor to handle pdf manipulation", 'Warning', 30000);  
                    }
                });

            }

            
            $("#elementpdf").unbind('click').bind('click', function () {

                var pdfViewer = document.getElementById('pdfviewer').ej2_instances[0];
                pdfViewer.serverActionSettings.download = "SaveDocument";
                pdfViewer.download();
                pdfViewer.serverActionSettings.download = "Download";

            });
            if (args.fileDetails[0].name.includes('.ppt')) {
                var fullName = args.fileDetails[0].filterPath + args.fileDetails[0].name;
                var payload = { fullName: fullName }; // change name
                $.ajax({
                    type: 'POST',
                    url: '/Home/PDFView/',
                    // contentType: 'application/json', // remove this line
                    data: payload, //remove JSON.stringify
                    success: function(result) {
                        //var pdfViewer = document.getElementById('pdfviewer').ej2_instances[0];  
                        //pdfViewer.load(result);
                        //var dialog = document.getElementById("default_dialog5").ej2_instances[0];                
                        //dialog.show();    

                        toastObj = ejs.notifications.ToastUtility.show("IMS PULSE TEAM: The Presentation Editor is in future plans. However, as of now, there is no editor to handle presentation manipulation", 'Warning', 3000);
                    }
                });
            }
       
        }
        if(args.item.text === 'Hide'){
            var fullName = args.fileDetails[0].filterPath + args.fileDetails[0].name;      
            let ajax = new ej.base.Ajax({ 
                url: '/Home/Hide2', 
                data: JSON.stringify(fullName),  // pass the string value  
                type: 'POST', 
                contentType: 'application/json' 
            }); 
            ajax.send(); 
            ajax.onSuccess = function (data) { 
                
                toastObj = ejs.notifications.ToastUtility.show(data, 'Success', 2000); 
            }; 
        }

        if(args.item.text === 'Show Hidden'){
            var dialog = document.getElementById("default_dialog7").ej2_instances[0];
            dialog.show();
            @{
                var manny = 0;
                                @foreach (var p in rows)
                {                  
                                    <text>                        
                                        $("#comhide_@manny").unbind('click').bind('click', function () {
                                                                                                                               
                                            var hider = document.getElementById("hider_@manny");
                                            var fullName = hider.value;  
                                            let ajax = new ej.base.Ajax({ 
                                                url: '/Home/UnHide', 
                                                data: JSON.stringify(fullName),  // pass the string value  
                                                type: 'POST', 
                                                contentType: 'application/json' 
                                            }); 
                                            ajax.send(); 
                                            ajax.onSuccess = function (data) {
                                                toastObj = ejs.notifications.ToastUtility.show(data, 'Success', 2000); 
                                            }; 
                                        });
                                    </text>

                    manny++;
                }
            }
       
        }
    }
    function menuClick(args) {
        if (args.item.text === 'Encrypt') {
            if (args.fileDetails[0].isFile) {
                var dialog = document.getElementById("default_dialog").ej2_instances[0];
                dialog.show();
                 $("#encry").unbind('click').bind('click', function() {
                    var pas2 = document.getElementById('mypassword');
                    var formData = { fullName: pas2.value, path: args.fileDetails[0].filterPath + args.fileDetails[0].name, state: "encrypt" };
                    var strJson = JSON.stringify(formData)
                    $.ajax({
                        type: 'POST',
                        url: '/Home/Protect/',
                        contentType: 'application/json', // remove this line
                        data: strJson, //remove JSON.stringify
                        success: function(result) {
                            toastObj = ejs.notifications.ToastUtility.show(result, 'Success', 2000); 
                            dialog.hide();
                        }
                    });

                });
            }
          
        }
        if (args.item.text === 'Decrypt') {
            if (args.fileDetails[0].isFile) {
                var dialog = document.getElementById("default_dialog2").ej2_instances[0];
                dialog.show();
                $("#decry").unbind('click').bind('click', function() {
                    var pas2 = document.getElementById('mypassword2');
                    var formData = { fullName: pas2.value, path: args.fileDetails[0].filterPath + args.fileDetails[0].name, state: "decrypt" };
                    var strJson = JSON.stringify(formData)
                    $.ajax({
                        type: 'POST',
                        url: '/Home/Protect/',
                        contentType: 'application/json', // remove this line
                        data: strJson, //remove JSON.stringify
                        success: function(result) {
                            toastObj = ejs.notifications.ToastUtility.show(result, 'Success', 2000); 
                            dialog.hide();
                        }
                    });

                });
            }

             
          
        }
        if (args.item.text === 'Edit') {
            var toast = document.getElementById('revtoast').ej2_instances[0];
            toast.hide();
            if (args.fileDetails[0].name.includes('.doc')) {
                var fullName = args.fileDetails[0].filterPath + args.fileDetails[0].name;
                var payload = { fullName: fullName }; // change name
                $.ajax({
                    type: 'POST',
                    url: '/Home/Demo2/',
                    // contentType: 'application/json', // remove this line
                    data: payload, //remove JSON.stringify
                    success: function (result) {
                        if (!result.includes('Error Message')) {
                            var documenteditorElement = document.getElementById("doccontainer");
                            container = documenteditorElement.ej2_instances[0];

                            container.documentEditor.open(result);
                            @{
                                if (!User.IsInRole("Admin"))
                                {
                                                                                                                                                        <text>
                                                                                                                                                            container.documentEditor.isReadOnly = true;
                                                                                                                                                        </text>                               
                                }
                            }
                            var dialog = document.getElementById("default_dialog3").ej2_instances[0];
                            dialog.show();
                        } else {
                            toastObj = ejs.notifications.ToastUtility.show(result, 'Error', 3000);
                        }
                                          
                    }
                });

                $("#revelement").unbind('click').bind('click', function() {
                    var documenteditorElement = document.getElementById("doccontainer");
                    container = documenteditorElement.ej2_instances[0];
                    container.documentEditor.editor.insertField('MERGEFIELD ' + 'Revision' + ' \\* MERGEFORMAT');
                });
                $("#element").unbind('click').bind('click', function () {

                    var documenteditorElement = document.getElementById("doccontainer");
                    container = documenteditorElement.ej2_instances[0];
                    var fullName = container.documentEditor.serialize();
                    var payload = { "fullName": fullName, "path": args.fileDetails[0].filterPath + args.fileDetails[0].name }; // change name
                    var strJson = JSON.stringify(payload);
                    $.ajax({
                        type: 'POST',
                        url: '/Home/Demo/',              
                        contentType: 'application/json', // remove this line
                        data: strJson, //remove JSON.stringify
                        success: function (result) { 
                            if (!result.includes('Document Successfully Saved!')) {
                                var toast = document.getElementById('revtoast').ej2_instances[0];
                                toast.show();
                                   $("#yesrev").unbind('click').bind('click', function() {
                                    var dialog = document.getElementById("default_dialog3").ej2_instances[0]; 
                                    dialog.hide();
                                    var fileObj = document.getElementById("filemanager").ej2_instances[0];
                                    fileObj.renameFile();
                                    var toast = document.getElementById('revtoast').ej2_instances[0];
                                    toast.hide();
                                });
                                $("#norev").unbind('click').bind('click', function() {
                                    toastObj = ejs.notifications.ToastUtility.show(result, 'Success', 3000);
                                    var toast = document.getElementById('revtoast').ej2_instances[0];
                                    toast.hide();
                                });
                            }else{
                                toastObj = ejs.notifications.ToastUtility.show(result, 'Success', 3000);
                            }                        
                        }
                    });
                });
            }

            if (args.fileDetails[0].name.includes('.xls')) {
                var fullName =  args.fileDetails[0].filterPath + args.fileDetails[0].name;
                var payload = { fullName: fullName }; // change name
                $.ajax({
                    type: 'POST',
                    url: '/Home/Demo2/',
                    // contentType: 'application/json', // remove this line
                    data: payload, //remove JSON.stringify
                    success: function (result) {
                         if (!result.includes('Error Message')) {
                            var spreadsheet = ej.base.getComponent(document.getElementById('spreadsheet'), 'spreadsheet');
                            spreadsheet.hideFileMenuItems(['Save As', 'Open']);
                            spreadsheet.openFromJson({ file: result }); // open the file into Spreadsheet

                            var dialog = document.getElementById("default_dialog4").ej2_instances[0];
                            dialog.show();
                        } else {
                            toastObj = ejs.notifications.ToastUtility.show(result, 'Error', 3000);
                        }               
                    }
                });

                $("#elementsp").unbind('click').bind('click', function () { 
                
                    var fullName = args.fileDetails[0].filterPath + args.fileDetails[0].name
                    var ssObj = ej.base.getComponent(document.getElementById('spreadsheet'), 'spreadsheet'); 
                    var pdfSettings = { FitSheetOnOnePage: false }; 
                    ssObj.saveAsJson().then((response) => { 
                            var formData = new FormData(); 
                            formData.append('JSONData', JSON.stringify(response.jsonObject.Workbook)); 
                            formData.append('fileName', 'Sample'); 
                            formData.append('saveType', 'Xlsx'); 
                           
                        $.ajax({ 
                            type: "POST", 
                            url: "/Home/SaveExcel", 
                            data: { JSONData: JSON.stringify(response.jsonObject.Workbook), fileName: args.fileDetails[0].name, saveType: "xlsx",  PDFLayoutSettings: JSON.stringify(pdfSettings), path: fullName }, 
                            success: function (result) { 
                                toastObj = ejs.notifications.ToastUtility.show(result, 'Success', 2000); 
                            } 
                        }) 
                    }); 
                
                });  

            }
            if (args.fileDetails[0].name.includes('.pdf')) {
                var fullName =  args.fileDetails[0].filterPath + args.fileDetails[0].name;
                var payload = { fullName: fullName }; // change name
                $.ajax({
                    type: 'POST',
                    url: '/Home/PDFView/',
                    // contentType: 'application/json', // remove this line
                    data: payload, //remove JSON.stringify
                    success: function (result) {
                        var pdfViewer = document.getElementById('pdfviewer').ej2_instances[0];  
                        pdfViewer.load(result);
                        var dialog = document.getElementById("default_dialog5").ej2_instances[0];                
                        dialog.show();    
                        //toastObj = ejs.notifications.ToastUtility.show("IMS PULSE TEAM: The PDF Editor is in future plans. However, as of now, there is no editor to handle pdf manipulation", 'Warning', 20000);                   
                    }
                });

            }
            if (args.fileDetails[0].name.includes('.ppt')) {
                var fullName =  args.fileDetails[0].filterPath + args.fileDetails[0].name;
                var payload = { fullName: fullName }; // change name
                $.ajax({
                    type: 'POST',
                    url: '/Home/PDFView/',
                    // contentType: 'application/json', // remove this line
                    data: payload, //remove JSON.stringify
                    success: function(result) {
                        //var pdfViewer = document.getElementById('pdfviewer').ej2_instances[0];  
                        //pdfViewer.load(result);
                        //var dialog = document.getElementById("default_dialog5").ej2_instances[0];                
                        //dialog.show();    
                         toastObj = ejs.notifications.ToastUtility.show("IMS PULSE TEAM: The Presentation Editor is in future plans. However, as of now, there is no editor to handle presentation manipulation", 'Warning', 3000);
                    }
                });
            }
          
        }
        
        if(args.item.text === 'Hide'){
            var fullName = args.fileDetails[0].filterPath + args.fileDetails[0].name;      
            let ajax = new ej.base.Ajax({ 
                url: '/Home/Hide2', 
                data: JSON.stringify(fullName),  // pass the string value  
                type: 'POST', 
                contentType: 'application/json' 
            }); 
            ajax.send(); 
            ajax.onSuccess = function (data) { 
                toastObj = ejs.notifications.ToastUtility.show(data, 'Success', 2000); 
            }; 
        }

        if(args.item.text === 'Show Hidden'){

            var dialog = document.getElementById("default_dialog7").ej2_instances[0];
            dialog.show();
            @{
                var many = 0;
                                    @foreach (var p in rows)
                {                  
                                                    <text>                        
                                                        $("#comhide_@manny").unbind('click').bind('click', function () {
                                                                                                                               
                                                            var hider = document.getElementById("hider_@many");
                                                            var fullName = hider.value;  
                                                            let ajax = new ej.base.Ajax({ 
                                                                url: '/Home/UnHide', 
                                                                data: JSON.stringify(fullName),  // pass the string value  
                                                                type: 'POST', 
                                                                contentType: 'application/json' 
                                                            }); 
                                                            ajax.send(); 
                                                            ajax.onSuccess = function (data) { 
                                                                toastObj = ejs.notifications.ToastUtility.show(data, 'Success', 2000); 
                                                            }; 
                                                        });
                                                    </text>

                    many++;
                }
            }
       
        }
 
    }


     function onCreate(args) {
   
        for (var i = 0; i < args.items.length; i++) {
            if (args.items[i].text == 'Encrypt') {
                args.items[i].prefixIcon = 'e-icons e-fe-lock';
            }
            if (args.items[i].text == 'Decrypt') {
                args.items[i].prefixIcon = 'e-icons e-fe-unlock';
            }
             if (args.items[i].text == 'Edit') {
                args.items[i].prefixIcon = 'e-icons e-fe-edit';
            }

            if (args.items[i].text == 'Hide') {
                args.items[i].prefixIcon = 'e-icons e-fe-hide';
            }

            
            if (args.items[i].text == 'Show Hidden') {
                args.items[i].prefixIcon = 'e-icons e-fe-hidden';
            }
        }

    }

    function onOverlayClick() {
       
    }

    function onFileOpen(args) {
        if (args.fileDetails.isFile) {
            if (args.fileDetails.name.includes('pdf')) {
                window.open('https://imspulse.com/bunch-box' + args.fileDetails.filterPath + args.fileDetails.name, '_blank');

            }else{
                document.getElementById('my_iframe').src = 'https://imspulse.com/bunch-box' + args.fileDetails.filterPath + args.fileDetails.name;
                alert(args.fileDetails.name + " is opened");
            }
  
        }

    }

 
    
</script>



    @if (ViewData["Message"] != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                alert('@ViewData["Message"]');
            };
        </script>
    }
    @if (ViewBag.MyMessage != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                alert('@ViewBag.MyMessage');
            };
        </script>
    }
    <style>
        .e-fe-lock::before {
            content: '\e788';
        }

         .e-fe-unlock::before {
            content: '\e78b';
        }

        .e-fe-edit::before{
            content: '\e740';
        }

        .e-fe-hide::before{
            content: '\e815';
        }  
        
        .e-fe-hidden::before{
            content: '\e7de';
        }

        .e-empty-inner-content {
            display: none;
        }

        .e-dlg-container .e-dlg-center-center{
            z-index: 7777;
        }

        .e-de-dlg-target .e-control .e-dialog .e-lib .e-draggable .e-dlg-modal .e-popup .e-popup-open{
            z-index: 7777;
        }

          /*Style to hide the root folder from navigation pane*/ 
        .filemanager .e-treeview .e-list-item.e-level-1 > .e-text-content { 
            display: none; 
        } 
 
      
        .filemanager .e-grid .e-content .e-rowcell .e-fe-text {

            background: #1C547C;
            color: white;

        }
        .filemanager .e-large-icons .e-list-text {
            background: #1C547C;
            color: white;

        }

        .btn-primary{
            background: #1C547C;
            color: white;
        }

        .filemanager .e-toolbar .e-toolbar-items{
            background: #1C547C;
            color: white
        }

        .filemanager .e-toolbar .e-tbar-btn:active{
            background: steelblue;
        }
        .filemanager .e-filemanager .e-toolbar .e-toolbar-items .e-toolbar-item .e-dropdown-btn.e-btn.e-tbar-btn:hover{
             background: steelblue;
        }

        .filemanager .e-filemanager .e-toolbar .e-toolbar-items .e-toolbar-item .e-dropdown-btn.e-btn.e-tbar-btn:active{
             background: steelblue;
        }

        .filemanager .e-toolbar .e-tbar-btn:hover{
            background: steelblue;
        }
        .filemanager .e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn-text{
            color: white;
        }
        .filemanager .e-toolbar .e-tbar-btn.e-btn .e-icons{
            color: white;
        }
        #default_dialog3 {
            height: 100%;
            width: 100%;
      
            padding: 0px;
            margin: 0px;
            left: 0px;
            right: 0px;
            bottom: 0px;
            top: 0px;
            z-index: 0
        }

        #docedit{
             z-index: 0;
        }

        .toast_container{
             z-index: 1;
        }
        
        #mypassword{
             -webkit-text-security: disc;
        }
        #mypassword2{
             -webkit-text-security: disc;
        }
        .myhidden{
            background: red;
        }

        .nav-pills .nav-link.active, .nav-pills .show>.nav-link{
            background-color: #1C547C;
            color: white
        }

        .nav-link{
            color: #1C547C;
        }
       
    </style>
       @if (!User.IsInRole("Master")){
           <style>
                ul.e-list-parent.e-ul .e-level-2 { 
                display: none; 
            } 
            /*Style to hide the root folder from breadcrumb*/ 
            .filemanager .e-address .e-address-list-item:nth-child(1) { 
                display: none; 
            } 
 
            /*Style to hide the icon from breadcrumb*/ 
            .filemanager .e-address .e-address-list-item:nth-child(2) .e-icons { 
                display: none; 
            } 

            .filemanager .e-addressbar-ul li:nth-child(1){
                display: none;
            }

            .e-dropdown-popup.e-submenu ul .e-item:nth-child(1) {
                display: none;
            }
           </style>         
        }
